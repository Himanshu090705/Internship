<% layout("/layouts/boilerplate") %>
<script>
    const listing = <%- JSON.stringify(listing)%>;
</script>
<div class="row mt-3">
    <div class="col-8 offset-3">
        <h3><%= listing.title %></h3>
    </div>
    <div class="card col-6 offset-3 show-card listing-card">
        <img
            src="<%= listing.image.url %>"
            class="card-img-top show-img mb-3 mt-2"
            alt="listing_image"
        />
        <div class="card-body">
            <p class="card-text">
                <i class="fa-solid fa-message"></i>&nbsp;&nbsp;<%=
                listing.description %> <br />
                <i class="fa-solid fa-indian-rupee-sign"></i>&nbsp;&nbsp;<%=
                listing.price.toLocaleString("en-IN") %> <br />
                <i class="fa-solid fa-location-dot"> </i>&nbsp;&nbsp;<%=
                listing.location %> <br />
                <i class="fa-solid fa-earth-americas"></i>&nbsp;&nbsp;<%=
                listing.country %> <br />
            </p>
        </div>
    </div>

    <br />
</div>
<div class="btns">
    <a
        href="/listings/<%= listing.id %>/edit"
        class="btn btn-dark col-1 offset-3 mb-3"
        ><i class="fa-solid fa-file-pen"></i>&nbsp;Edit</a
    >
    <form method="post" action="/listings/<%= listing.id %>?_method=delete">
        <button class="btn btn-dark offset-5 col-12 mb-3">
            <i class="fa-solid fa-trash"></i>&nbsp;Delete
        </button>
    </form>
</div>
<div class="col-6 offset-3 mb-3">
    <% if(currUser) { %>
    <hr />
    <h4>Leave a Review</h4>
    <form
        action="/listings/<%= listing.id %>/reviews"
        method="post"
        novalidate
        class="needs-validation"
    >
        <div class="mb-3 mt-3">
            <label for="rating" class="form-label"
                ><i class="fa-solid fa-star"></i>&nbsp;Rating</label
            >
            <fieldset class="starability-slot">
                <input
                    type="radio"
                    id="no-rate"
                    class="input-no-rate"
                    name="review[rating]"
                    value="1"
                    checked
                    aria-label="No rating."
                />
                <input
                    type="radio"
                    id="first-rate1"
                    name="review[rating]"
                    value="1"
                />
                <label for="first-rate1" title="Terrible">1 star</label>
                <input
                    type="radio"
                    id="first-rate2"
                    name="review[rating]"
                    value="2"
                />
                <label for="first-rate2" title="Not good">2 stars</label>
                <input
                    type="radio"
                    id="first-rate3"
                    name="review[rating]"
                    value="3"
                />
                <label for="first-rate3" title="Average">3 stars</label>
                <input
                    type="radio"
                    id="first-rate4"
                    name="review[rating]"
                    value="4"
                />
                <label for="first-rate4" title="Very good">4 stars</label>
                <input
                    type="radio"
                    id="first-rate5"
                    name="review[rating]"
                    value="5"
                />
                <label for="first-rate5" title="Amazing">5 stars</label>
            </fieldset>
        </div>
        <div class="mb-3 mt-3">
            <label for="comment" class="form-label"
                ><i class="fa-solid fa-comments"></i>&nbsp;Comments</label
            >
            <textarea
                name="review[comment]"
                id="comment"
                class="form-control"
                required
            ></textarea>
            <div class="invalid-feedback">Please provide a valid Comment!</div>
        </div>
        <button class="btn btn-outline-dark mb-3 mt-3">
            <i class="fa-solid fa-square-check"></i>&nbsp;Submit
        </button>
    </form>
    <hr />
    <% } %> <% if(listing.reviews.length>0) {%>
    <div class="row">
        <p>
            <b><i class="fa-solid fa-rectangle-list"></i>&nbsp;All Reviews</b>
        </p>

        <% for(review of listing.reviews) {%>
        <div class="card me-5 mb-3 col-5">
            <div class="card-body">
                <h5 class="card-title">
                    <i class="fa-solid fa-at"></i>&nbsp;<%=
                    review.author.username %>
                </h5>
                <p
                    class="starability-result card-text"
                    data-rating="<%= review.rating %>"
                ></p>
                <p class="card-text">
                    <i class="fa-solid fa-comment"></i>&nbsp;<%= review.comment
                    %>
                </p>
            </div>
            <form
                action="/listings/<%= listing._id %>/reviews/<%= review._id %>?_method=delete"
                method="post"
                class="mb-3 mt-2"
            >
                <button class="btn btn-sm btn-dark">
                    <i class="fa-solid fa-trash"></i>&nbsp;Delete
                </button>
            </form>
        </div>
        <% } %>
    </div>
    <% } %>
</div>
<div class="col-8 offset-3 mb-3">
    <h3>Where y'll be</h3>
    <div id="map"></div>
</div>
<script src="/js/map.js"></script>

<!-- <script>
        ((g) => {
            var h,
                a,
                k,
                p = "The Google Maps JavaScript API",
                c = "google",
                l = "importLibrary",
                q = "__ib__",
                m = document,
                b = window;
            b = b[c] || (b[c] = {});
            var d = b.maps || (b.maps = {}),
                r = new Set(),
                e = new URLSearchParams(),
                u = () =>
                    h ||
                    (h = new Promise(async (f, n) => {
                        await (a = m.createElement("script"));
                        e.set("libraries", [...r] + "");
                        for (k in g)
                            e.set(
                                k.replace(
                                    /[A-Z]/g,
                                    (t) => "_" + t[0].toLowerCase()
                                ),
                                g[k]
                            );
                        e.set("callback", c + ".maps." + q);
                        a.src = `https://maps.${c}apis.com/maps/api/js?` + e;
                        d[q] = f;
                        a.onerror = () =>
                            (h = n(Error(p + " could not load.")));
                        a.nonce = m.querySelector("script[nonce]")?.nonce || "";
                        m.head.append(a);
                    }));
            d[l]
                ? console.warn(p + " only loads once. Ignoring:", g)
                : (d[l] = (f, ...n) =>
                      r.add(f) && u().then(() => d[l](f, ...n)));
        })({ key: "AIzaSyDikjl8iAwkHRJqymSmNZG6ZmfPBO1ZEv4", v: "weekly" });
        let map;
        async function initMap() {
            const { Map } = await google.maps.importLibrary("maps");
            map = new Map(document.getElementById("map"), {
                center: { lat: 21.17, lng: 72.83 },
                zoom: 10,
                // mapTypeId: "satellite",
                mapTypeId: "terrain",
            });
            const marker = new google.maps.Marker({
                position: { lat: 21.17, lng: 72.83 },
                map: map,
                title: "Surat",
                animation: google.maps.Animation.DROP,
            });
            const infoWindow = new google.maps.InfoWindow({
                content: "<p>This is info window</p>",
            });
            infoWindow.open(map, marker);
        }
        initMap();
        // for more info about google maps- https://developers.google.com/maps/documentation/javascript/examples
    </script> -->
